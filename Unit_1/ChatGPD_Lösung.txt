import os
import shutil
from PIL import Image

def validate_images(input_dir: str, output_dir: str, log_file: str, formatter: str = "07d") -> int:
    # Check if input_dir exists
    if not os.path.exists(input_dir) or not os.path.isdir(input_dir):
        raise ValueError(f"{input_dir} is not a valid directory")
    
    # Create output_dir if it does not exist
    os.makedirs(output_dir, exist_ok=True)
    
    # Create log_file and write header
    with open(log_file, 'w') as f:
        f.write("filename,error_code\n")
    
    # Initialize variables
    copied_files = set()
    valid_files = 0
    
    # Recursively list files in input_dir and sort them by name
    file_list = []
    for root, _, files in os.walk(input_dir):
        for filename in files:
            filepath = os.path.join(root, filename)
            file_list.append(filepath)
    file_list = sorted(file_list)
    
    # Loop over files and validate them
    for filepath in file_list:
        # Check file extension
        _, ext = os.path.splitext(filepath)
        if ext.lower() not in ('.jpg', '.jpeg'):
            with open(log_file, 'a') as f:
                relpath = os.path.relpath(filepath, input_dir)
                f.write(f"{relpath},1\n")
            continue
        
        # Check file size
        if os.path.getsize(filepath) > 250000:
            with open(log_file, 'a') as f:
                relpath = os.path.relpath(filepath, input_dir)
                f.write(f"{relpath},2\n")
            continue
        
        # Load image and check dimensions and mode
        try:
            with Image.open(filepath) as img:
                width, height = img.size
                mode = img.mode
                if not (mode == 'RGB' and width >= 100 and height >= 100 or
                        mode == 'L' and width == height and width >= 100):
                    raise ValueError
        except (OSError, ValueError):
            with open(log_file, 'a') as f:
                relpath = os.path.relpath(filepath, input_dir)
                f.write(f"{relpath},3\n")
            continue
        
        # Check image variance
        if img.getextrema()[0] == img.getext